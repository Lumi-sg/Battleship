(()=>{"use strict";var t={28:(t,n,e)=>{e.d(n,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([t.id,'* {\n\tfont-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;\n}\n\nbody {\n\tbackground-color: #181818;\n\tcolor: white;\n}\n\n.Title {\n\ttext-align: center;\n\tmargin: 20px 0;\n}\n\n.TitleText {\n\tfont-size: 4rem;\n\tcolor: white;\n}\n\n.gameboards {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tpadding: 1rem;\n\tflex-direction: row;\n\tgap: 10rem;\n\tjustify-content: center;\n}\n\n.gameboard.playerBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 400px;\n\theight: 400px;\n\tborder: 2px solid rgb(2, 2, 112);\n\tborder-bottom: 4px solid rgb(2, 2, 112);\n\tposition: relative;\n}\n\n.gameboard.cpuBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 400px;\n\theight: 400px;\n\tborder: 2px solid rgb(112, 2, 2);\n\tborder-bottom: 4px solid rgb(112, 2, 2);\n\tposition: relative;\n}\n\n.gameboard .row {\n\tdisplay: flex;\n\theight: 40px;\n}\n\n.square {\n\tbox-sizing: border-box;\n\twidth: 10%;\n\tbackground-color: #3a3a3a;\n\tborder: 1px solid #202020;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: large;\n}\n\n.shipsRemaining {\n\ttext-align: center;\n\tmargin-top: 50px;\n}\n\n.playerShips,\n.cpuShips {\n\tfont-size: 24px;\n\tmargin: 10px 0;\n}\n\n.fa {\n\tcolor: white;\n\ttransition: transform 0.3s ease-in-out;\n}\n\n.fa:hover {\n\ttransform: rotate(360deg) scale(1.2);\n}\n\n.footer {\n\tbottom: 0;\n\tleft: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n\theight: 10%;\n\tfont-size: 20px;\n\tcolor: white;\n}\n\n.legend-bottom {\n\tposition: absolute;\n\tbottom: -25px; /* changed from 25px */\n\tdisplay: flex;\n\tflex-direction: row;\n\tgap: 1.95rem;\n\twidth: 100%;\n\tcolor: white;\n\tright: -16px;\n}\n\n.legend-number {\n\tdisplay: flex;\n\twidth: 10%;\n\theight: 100%;\n}\n\n.legend-left {\n\tposition: fixed;\n\tleft: 30%;\n\ttop: 15%;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 70%;\n\tcolor: white;\n\tgap: 1.31rem;\n\ttext-align: center;\n}\n\n.legend-right {\n\tposition: fixed;\n\tright: 46%;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 70%;\n\tcolor: white;\n\ttop: 20.25%;\n\tgap: 1.31rem;\n\ttext-align: center;\n}\n\nspan {\n\tcolor: #6d6d6d;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;CACC,sEAAsE;AACvE;;AAEA;CACC,yBAAyB;CACzB,YAAY;AACb;;AAEA;CACC,kBAAkB;CAClB,cAAc;AACf;;AAEA;CACC,eAAe;CACf,YAAY;AACb;;AAEA;CACC,aAAa;CACb,eAAe;CACf,aAAa;CACb,mBAAmB;CACnB,UAAU;CACV,uBAAuB;AACxB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,YAAY;CACZ,aAAa;CACb,gCAAgC;CAChC,uCAAuC;CACvC,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,YAAY;CACZ,aAAa;CACb,gCAAgC;CAChC,uCAAuC;CACvC,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,YAAY;AACb;;AAEA;CACC,sBAAsB;CACtB,UAAU;CACV,yBAAyB;CACzB,yBAAyB;CACzB,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,gBAAgB;AACjB;;AAEA;CACC,kBAAkB;CAClB,gBAAgB;AACjB;;AAEA;;CAEC,eAAe;CACf,cAAc;AACf;;AAEA;CACC,YAAY;CACZ,sCAAsC;AACvC;;AAEA;CACC,oCAAoC;AACrC;;AAEA;CACC,SAAS;CACT,OAAO;CACP,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,SAAS;CACT,WAAW;CACX,WAAW;CACX,eAAe;CACf,YAAY;AACb;;AAEA;CACC,kBAAkB;CAClB,aAAa,EAAE,sBAAsB;CACrC,aAAa;CACb,mBAAmB;CACnB,YAAY;CACZ,WAAW;CACX,YAAY;CACZ,YAAY;AACb;;AAEA;CACC,aAAa;CACb,UAAU;CACV,YAAY;AACb;;AAEA;CACC,eAAe;CACf,SAAS;CACT,QAAQ;CACR,aAAa;CACb,sBAAsB;CACtB,WAAW;CACX,YAAY;CACZ,YAAY;CACZ,kBAAkB;AACnB;;AAEA;CACC,eAAe;CACf,UAAU;CACV,aAAa;CACb,sBAAsB;CACtB,WAAW;CACX,YAAY;CACZ,WAAW;CACX,YAAY;CACZ,kBAAkB;AACnB;;AAEA;CACC,cAAc;AACf",sourcesContent:['* {\n\tfont-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;\n}\n\nbody {\n\tbackground-color: #181818;\n\tcolor: white;\n}\n\n.Title {\n\ttext-align: center;\n\tmargin: 20px 0;\n}\n\n.TitleText {\n\tfont-size: 4rem;\n\tcolor: white;\n}\n\n.gameboards {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tpadding: 1rem;\n\tflex-direction: row;\n\tgap: 10rem;\n\tjustify-content: center;\n}\n\n.gameboard.playerBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 400px;\n\theight: 400px;\n\tborder: 2px solid rgb(2, 2, 112);\n\tborder-bottom: 4px solid rgb(2, 2, 112);\n\tposition: relative;\n}\n\n.gameboard.cpuBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 400px;\n\theight: 400px;\n\tborder: 2px solid rgb(112, 2, 2);\n\tborder-bottom: 4px solid rgb(112, 2, 2);\n\tposition: relative;\n}\n\n.gameboard .row {\n\tdisplay: flex;\n\theight: 40px;\n}\n\n.square {\n\tbox-sizing: border-box;\n\twidth: 10%;\n\tbackground-color: #3a3a3a;\n\tborder: 1px solid #202020;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: large;\n}\n\n.shipsRemaining {\n\ttext-align: center;\n\tmargin-top: 50px;\n}\n\n.playerShips,\n.cpuShips {\n\tfont-size: 24px;\n\tmargin: 10px 0;\n}\n\n.fa {\n\tcolor: white;\n\ttransition: transform 0.3s ease-in-out;\n}\n\n.fa:hover {\n\ttransform: rotate(360deg) scale(1.2);\n}\n\n.footer {\n\tbottom: 0;\n\tleft: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n\theight: 10%;\n\tfont-size: 20px;\n\tcolor: white;\n}\n\n.legend-bottom {\n\tposition: absolute;\n\tbottom: -25px; /* changed from 25px */\n\tdisplay: flex;\n\tflex-direction: row;\n\tgap: 1.95rem;\n\twidth: 100%;\n\tcolor: white;\n\tright: -16px;\n}\n\n.legend-number {\n\tdisplay: flex;\n\twidth: 10%;\n\theight: 100%;\n}\n\n.legend-left {\n\tposition: fixed;\n\tleft: 30%;\n\ttop: 15%;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 70%;\n\tcolor: white;\n\tgap: 1.31rem;\n\ttext-align: center;\n}\n\n.legend-right {\n\tposition: fixed;\n\tright: 46%;\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 70%;\n\tcolor: white;\n\ttop: 20.25%;\n\tgap: 1.31rem;\n\ttext-align: center;\n}\n\nspan {\n\tcolor: #6d6d6d;\n}\n'],sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),n.push(c))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===t){e=o;break}return e}function o(t,o){for(var i={},a=[],s=0;s<t.length;s++){var A=t[s],l=o.base?A[0]+o.base:A[0],c=i[l]||0,p="".concat(l," ").concat(c);i[l]=c+1;var d=e(p),C={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)n[d].references++,n[d].updater(C);else{var h=r(C,o);o.byIndex=s,n.splice(s,0,{identifier:p,updater:h,references:1})}a.push(p)}return a}function r(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=e(i[a]);n[s].references--}for(var A=o(t,r),l=0;l<i.length;l++){var c=e(i[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=A}}},569:t=>{var n={};t.exports=function(t,e){var o=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return t[o](i,i.exports,e),i.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0,(()=>{var t=e(379),n=e.n(t),o=e(795),r=e.n(o),i=e(569),a=e.n(i),s=e(565),A=e.n(s),l=e(216),c=e.n(l),p=e(589),d=e.n(p),C=e(28),h={};h.styleTagTransform=d(),h.setAttributes=A(),h.insert=a().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=c(),n()(C.Z,h),C.Z&&C.Z.locals&&C.Z.locals;class u{constructor(t,n,e){this.shipLength=t,this.position=n,this.hits=Array(t).fill(!1),this.orientation=e}isSunk(){return!!this.hits.every((t=>t))}hitShip(t){this.hits[t]=!0}isHit(t){return!!this.hits[t]}rotate(){"horizontal"===this.orientation?this.orientation="vertical":this.orientation="horizontal"}}class f{constructor(t){this.boardSize=t,this.board=this.createBoard(t),this.ships=[]}createBoard(t){let n=[];for(let e=0;e<t;e++){let e=[];for(let n=0;n<t;n++)e.push(null);n.push(e)}return n}addShip(t){if(!0===this.isShipOverlap(t)||!1===this.isShipInBounds(t))return!1;this.ships.push(t);const n=t.position.row,e=t.position.col;if("horizontal"===t.orientation)for(let o=0;o<t.shipLength;o++)this.board[n][e+o]=t;else for(let o=0;o<t.shipLength;o++)this.board[n+o][e]=t;return!0}isShipInBounds(t){const n=t.position.col,e=n+t.shipLength-1;return!(n<0||e>this.boardSize-1)}isShipOverlap(t){for(let n=0;n<this.ships.length;n++){let e=this.ships[n];if("horizontal"===t.position.orientation){if(t.position.row===e.position.row&&t.position.col+n>=e.position.col&&t.position.col+n<=e.position.col+e.shipLength-1)return!0}else if(t.position.col===e.position.col&&t.position.row+n>=e.position.row&&t.position.row+n<=e.position.row+e.shipLength-1)return!0}return!1}receiveAttack(t,n){if(null===this.board[t][n])return this.board[t][n]=!0,!1;{const e=this.board[t][n];return"horizontal"===e.orientation?e.hitShip(n-e.position.col):e.hitShip(t-e.position.row),this.board[t][n]=!0,!0}}allShipsSunk(){return this.ships.every((t=>t.isSunk()))}}class g{constructor(t,n,e=!1){this.name=t,this.gameboard=n,this.turn=e}isTurn(){return!!this.turn}changeTurn(){this.turn?this.turn=!1:this.turn=!0}placeShip(t,n,e){const o=new u(t.shipLength,n,e);return this.gameboard.addShip(o)}receiveAttack(t,n){return this.gameboard.receiveAttack(t,n)}attackRandomSpot(){const t=[];for(let n=0;n<this.gameboard.boardSize;n++)for(let e=0;e<this.gameboard.boardSize;e++){const o=this.gameboard.board[n][e];(null===o||o instanceof u&&!o.isHit(n,e))&&t.push({row:n,col:e})}if(0===t.length)return!1;const n=t[Math.floor(Math.random()*t.length)];return this.gameboard.receiveAttack(n.row,n.col),!0}renderGameboard(t,n){for(let e=0;e<n.length;e++){const o=document.createElement("div");o.classList.add("row");for(let t=0;t<n[e].length;t++){const r=document.createElement("div");r.classList.add("square"),n[e][t]instanceof u&&(r.textContent="B"),o.appendChild(r)}t.appendChild(o)}t.classList.add("playerBoard")}hasLost(){return this.gameboard.allShipsSunk()}}let m=new g("Human",new f(10)),b=new g("CPU",new f(10));!function(){const t=new u(2,[5,6],"vertical");m.placeShip(t,{row:4,col:2},"vertical");const n=new u(3,[1,2,3],"horizontal");m.placeShip(n,{row:0,col:0},"horizontal");const e=new u(3,[8,9,10],"horizontal");m.placeShip(e,{row:2,col:6},"horizontal");const o=new u(4,[47,57,67,77],"vertical");m.placeShip(o,{row:4,col:6},"vertical");const r=new u(5,[15,25,35,45,55],"horizontal");m.placeShip(r,{row:8,col:1},"horizontal")}(),function(){const t=new u(2,[28,38],"vertical");b.placeShip(t,{row:3,col:8},"vertical");const n=new u(3,[46,47,48],"horizontal");b.placeShip(n,{row:4,col:1},"horizontal");const e=new u(3,[25,26,27],"horizontal");b.placeShip(e,{row:7,col:4},"horizontal");const o=new u(4,[18,28,38,48],"vertical");b.placeShip(o,{row:0,col:6},"vertical");const r=new u(5,[32,42,52,62,72],"horizontal");b.placeShip(r,{row:2,col:0},"horizontal")}();const x=document.querySelector(".gameboard.playerBoard"),B=document.querySelector(".gameboard.cpuBoard");m.renderGameboard(x,m.gameboard.board),b.renderGameboard(B,b.gameboard.board),console.table(m.gameboard.board),console.table(b.gameboard.board)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,