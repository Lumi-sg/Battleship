(()=>{"use strict";var t={28:(t,n,e)=>{e.d(n,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([t.id,"* {\n\tbox-sizing: border-box;\n}\n\nbody {\n\tbackground-color: #181818;\n\tcolor: white;\n\tmargin: 0;\n}\n\n.Title {\n\ttext-align: center;\n\tmargin: 2.5vh 0;\n}\n\n.TitleText {\n\tfont-size: 5vw;\n\tcolor: white;\n\tmargin: 0;\n}\n\n.gameboards {\n\tposition: relative;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tpadding: 2vh;\n\tgap: 5vw;\n\tjustify-content: center;\n}\n\n.gameboard.playerBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 25vw;\n\theight: 25vw;\n\tborder: 0.25vw solid rgb(0, 0, 169);\n\tborder-bottom: 0.3vw solid rgb(0, 0, 169);\n\tposition: relative;\n}\n\n.gameboard.cpuBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 25vw;\n\theight: 25vw;\n\tborder: 0.25vw solid rgb(205, 0, 0);\n\tborder-bottom: 0.3vw solid rgb(205, 0, 0);\n\tposition: relative;\n}\n\n.gameboard .row {\n\tdisplay: flex;\n\theight: 4vw;\n}\n\n.square {\n\twidth: 10%;\n\tbackground-color: #3a3a3a;\n\tborder: 0.1vw solid #202020;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 1.5vw;\n}\n.cpuSquare:hover {\n\tcursor: crosshair;\n}\n\n.shipsRemaining {\n\ttext-align: center;\n\tmargin-top: 5vh;\n}\n\n.playerShips,\n.cpuShips {\n\tfont-size: 2vw;\n\tmargin: 2vh 0;\n}\n\n.fa {\n\tcolor: white;\n\ttransition: transform 0.3s ease-in-out;\n}\n\n.fa:hover {\n\ttransform: rotate(360deg) scale(1.2);\n}\n\n.footer {\n\tbottom: 0;\n\tleft: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 1vw;\n\twidth: 100%;\n\theight: 10vh;\n\tfont-size: 1.5vw;\n\tcolor: white;\n}\n\n.legend {\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: white;\n}\n\n.legend-bottom {\n\tleft: 0;\n\tright: 0;\n\tdisplay: flex;\n\tflex-direction: row;\n\tgap: 1.9vw;\n\tmargin-left: 1vw;\n}\n\n.legend-number {\n\twidth: 10%;\n\theight: 100%;\n}\n\n.legend-left {\n\tmargin-left: -1vw;\n\tmargin-top: 1vw;\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1.325vw;\n}\n\n.legend-right {\n\tmargin-left: -1vw;\n\tmargin-top: 1vw;\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1.325vw;\n}\n\nspan {\n\tcolor: #6d6d6d;\n\tfont-size: 1vw;\n}\n\n.cpuSquare.ship {\n\tborder: rgb(205, 0, 0) 1px solid;\n\tfont-weight: bold;\n}\n\n.humanSquare.ship {\n\tborder: rgb(0, 0, 169) 1px solid;\n\tfont-weight: bold;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;CACC,sBAAsB;AACvB;;AAEA;CACC,yBAAyB;CACzB,YAAY;CACZ,SAAS;AACV;;AAEA;CACC,kBAAkB;CAClB,eAAe;AAChB;;AAEA;CACC,cAAc;CACd,YAAY;CACZ,SAAS;AACV;;AAEA;CACC,kBAAkB;CAClB,aAAa;CACb,eAAe;CACf,YAAY;CACZ,QAAQ;CACR,uBAAuB;AACxB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,WAAW;CACX,YAAY;CACZ,mCAAmC;CACnC,yCAAyC;CACzC,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,WAAW;CACX,YAAY;CACZ,mCAAmC;CACnC,yCAAyC;CACzC,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,WAAW;AACZ;;AAEA;CACC,UAAU;CACV,yBAAyB;CACzB,2BAA2B;CAC3B,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,gBAAgB;AACjB;AACA;CACC,iBAAiB;AAClB;;AAEA;CACC,kBAAkB;CAClB,eAAe;AAChB;;AAEA;;CAEC,cAAc;CACd,aAAa;AACd;;AAEA;CACC,YAAY;CACZ,sCAAsC;AACvC;;AAEA;CACC,oCAAoC;AACrC;;AAEA;CACC,SAAS;CACT,OAAO;CACP,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,QAAQ;CACR,WAAW;CACX,YAAY;CACZ,gBAAgB;CAChB,YAAY;AACb;;AAEA;CACC,kBAAkB;CAClB,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,uBAAuB;CACvB,YAAY;AACb;;AAEA;CACC,OAAO;CACP,QAAQ;CACR,aAAa;CACb,mBAAmB;CACnB,UAAU;CACV,gBAAgB;AACjB;;AAEA;CACC,UAAU;CACV,YAAY;AACb;;AAEA;CACC,iBAAiB;CACjB,eAAe;CACf,eAAe;CACf,aAAa;CACb,sBAAsB;CACtB,YAAY;AACb;;AAEA;CACC,iBAAiB;CACjB,eAAe;CACf,eAAe;CACf,aAAa;CACb,sBAAsB;CACtB,YAAY;AACb;;AAEA;CACC,cAAc;CACd,cAAc;AACf;;AAEA;CACC,gCAAgC;CAChC,iBAAiB;AAClB;;AAEA;CACC,gCAAgC;CAChC,iBAAiB;AAClB",sourcesContent:["* {\n\tbox-sizing: border-box;\n}\n\nbody {\n\tbackground-color: #181818;\n\tcolor: white;\n\tmargin: 0;\n}\n\n.Title {\n\ttext-align: center;\n\tmargin: 2.5vh 0;\n}\n\n.TitleText {\n\tfont-size: 5vw;\n\tcolor: white;\n\tmargin: 0;\n}\n\n.gameboards {\n\tposition: relative;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tpadding: 2vh;\n\tgap: 5vw;\n\tjustify-content: center;\n}\n\n.gameboard.playerBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 25vw;\n\theight: 25vw;\n\tborder: 0.25vw solid rgb(0, 0, 169);\n\tborder-bottom: 0.3vw solid rgb(0, 0, 169);\n\tposition: relative;\n}\n\n.gameboard.cpuBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 25vw;\n\theight: 25vw;\n\tborder: 0.25vw solid rgb(205, 0, 0);\n\tborder-bottom: 0.3vw solid rgb(205, 0, 0);\n\tposition: relative;\n}\n\n.gameboard .row {\n\tdisplay: flex;\n\theight: 4vw;\n}\n\n.square {\n\twidth: 10%;\n\tbackground-color: #3a3a3a;\n\tborder: 0.1vw solid #202020;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 1.5vw;\n}\n.cpuSquare:hover {\n\tcursor: crosshair;\n}\n\n.shipsRemaining {\n\ttext-align: center;\n\tmargin-top: 5vh;\n}\n\n.playerShips,\n.cpuShips {\n\tfont-size: 2vw;\n\tmargin: 2vh 0;\n}\n\n.fa {\n\tcolor: white;\n\ttransition: transform 0.3s ease-in-out;\n}\n\n.fa:hover {\n\ttransform: rotate(360deg) scale(1.2);\n}\n\n.footer {\n\tbottom: 0;\n\tleft: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 1vw;\n\twidth: 100%;\n\theight: 10vh;\n\tfont-size: 1.5vw;\n\tcolor: white;\n}\n\n.legend {\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: white;\n}\n\n.legend-bottom {\n\tleft: 0;\n\tright: 0;\n\tdisplay: flex;\n\tflex-direction: row;\n\tgap: 1.9vw;\n\tmargin-left: 1vw;\n}\n\n.legend-number {\n\twidth: 10%;\n\theight: 100%;\n}\n\n.legend-left {\n\tmargin-left: -1vw;\n\tmargin-top: 1vw;\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1.325vw;\n}\n\n.legend-right {\n\tmargin-left: -1vw;\n\tmargin-top: 1vw;\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1.325vw;\n}\n\nspan {\n\tcolor: #6d6d6d;\n\tfont-size: 1vw;\n}\n\n.cpuSquare.ship {\n\tborder: rgb(205, 0, 0) 1px solid;\n\tfont-weight: bold;\n}\n\n.humanSquare.ship {\n\tborder: rgb(0, 0, 169) 1px solid;\n\tfont-weight: bold;\n}\n"],sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),n.push(c))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===t){e=o;break}return e}function o(t,o){for(var i={},a=[],s=0;s<t.length;s++){var A=t[s],l=o.base?A[0]+o.base:A[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var h=e(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==h)n[h].references++,n[h].updater(u);else{var C=r(u,o);o.byIndex=s,n.splice(s,0,{identifier:d,updater:C,references:1})}a.push(d)}return a}function r(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=e(i[a]);n[s].references--}for(var A=o(t,r),l=0;l<i.length;l++){var c=e(i[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=A}}},569:t=>{var n={};t.exports=function(t,e){var o=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return t[o](i,i.exports,e),i.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0,(()=>{var t=e(379),n=e.n(t),o=e(795),r=e.n(o),i=e(569),a=e.n(i),s=e(565),A=e.n(s),l=e(216),c=e.n(l),d=e(589),h=e.n(d),u=e(28),C={};C.styleTagTransform=h(),C.setAttributes=A(),C.insert=a().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=c(),n()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;class p{constructor(t,n,e){this.shipLength=t,this.position={row:n.row,col:n.col},this.hits=Array(t).fill(!1),this.orientation=e}isSunk(){return!!this.hits.every((t=>t))}hitShip(t){this.hits[t]=!0}isHit(t){return!!this.hits[t]}}class f{constructor(t){this.boardSize=t,this.board=this.createBoard(t),this.ships=[]}createBoard(t){let n=[];for(let e=0;e<t;e++){let e=[];for(let n=0;n<t;n++)e.push(null);n.push(e)}return n}renderCPUGameBoard(t,n){for(let e=0;e<n.length;e++){const o=document.createElement("div");o.classList.add("row");for(let r=0;r<n[e].length;r++){const i=document.createElement("div");i.classList.add("square"),t.classList.contains("playerBoard")?(i.classList.add("humanSquare"),n[e][r]instanceof p&&(i.textContent="S",i.classList.add("ship"))):t.classList.contains("cpuBoard")&&(i.classList.add("cpuSquare"),n[e][r]instanceof p&&(i.textContent="S",i.classList.add("ship"))),i.setAttribute("data-row",e),i.setAttribute("data-col",r),o.appendChild(i)}t.appendChild(o)}}renderPlayerBoard(t,n){t.innerHTML="";for(let e=0;e<n.length;e++){const o=document.createElement("div");o.classList.add("row");for(let t=0;t<n.length;t++){const r=document.createElement("div");r.classList.add("square"),r.classList.add("humanSquare"),n[e][t]instanceof p&&(r.textContent="S",r.classList.add("ship")),r.setAttribute("data-row",e),r.setAttribute("data-col",t),o.appendChild(r)}t.appendChild(o)}}receiveAttack(t,n){if(null===this.board[t][n])return this.board[t][n]=!0,!1;{const e=this.board[t][n];return"horizontal"===e.orientation?e.hitShip(n-e.position.col):e.hitShip(t-e.position.row),this.board[t][n]=!0,!0}}allShipsSunk(){return this.ships.every((t=>t.isSunk()))}numberOfShips(){const t=this.ships.length,n=this.ships.filter((t=>t.hits.every((t=>!0===t)))).length;return t-n>0?t-n:0}clearBoard(){this.board=this.createBoard(this.boardSize),this.ships=[]}addShip(t,n,e){const o=new p(t,n,e);return!(!this.isShipInBounds(o)||this.isShipOverlap(o)||(this.ships.push(o),this.placeShipOnBoard(o),0))}isShipInBounds(t){return"horizontal"===t.orientation?t.position.col+t.shipLength-1<this.boardSize:"vertical"===t.orientation&&t.position.row+t.shipLength-1<this.boardSize}isShipOverlap(t){if("horizontal"===t.orientation){for(let n=t.position.col;n<t.position.col+t.shipLength;n++)if(null!==this.board[t.position.row][n])return!0}else if("vertical"===t.orientation)for(let n=t.position.row;n<t.position.row+t.shipLength;n++)if(null!==this.board[n][t.position.col])return!0;return!1}placeShipOnBoard(t){if("horizontal"===t.orientation)for(let n=t.position.col;n<t.position.col+t.shipLength;n++)this.board[t.position.row][n]=t;else if("vertical"===t.orientation)for(let n=t.position.row;n<t.position.row+t.shipLength;n++)this.board[n][t.position.col]=t}}class m{constructor(t,n,e=!1){this.name=t,this.gameboard=n,this.turn=e}isTurn(){return!!this.turn}changeTurn(){this.turn?this.turn=!1:this.turn=!0}placeRandomShip(t){let n=r(this.gameboard.boardSize),e=i(),o=!1;for(;!o;)o=this.gameboard.addShip(t,n,e),o?console.log(`Ship with length ${t} added successfully!`):(console.log(`Unable to add ship with length ${t}. Retrying...`),n=r(this.gameboard.boardSize),e=i());function r(t){return{row:Math.floor(Math.random()*t),col:Math.floor(Math.random()*t)}}function i(){const t=["horizontal","vertical"];return t[Math.floor(Math.random()*t.length)]}}receiveAttack(t,n){return this.gameboard.receiveAttack(t,n)}attackRandomSpot(){const t=[];for(let n=0;n<this.gameboard.boardSize;n++)for(let e=0;e<this.gameboard.boardSize;e++){const o=this.gameboard.board[n][e];(null===o||o instanceof p&&!o.isHit(n,e))&&t.push({row:n,col:e})}if(0===t.length)return!1;const n=Math.floor(Math.random()*t.length),e=function(){const e=t[n],o=document.querySelector(`.humanSquare[data-row="${e.row}"][data-col="${e.col}"]`);return o&&(o.textContent="X"),e}();return this.gameboard.receiveAttack(e.row,e.col),!0}shipCounter(){const t=document.querySelector(".playerShips"),n=document.querySelector(".cpuShips");"Human"===this.name?t.textContent=`Player Ships Remaining: ${this.gameboard.numberOfShips()}`:"CPU"===this.name&&(n.textContent=`CPU Ships Remaining: ${this.gameboard.numberOfShips()}`)}hasLost(){return this.gameboard.allShipsSunk()}}function g(t,n,e){const o=document.querySelector("body");o.classList.add("blur");const r=document.createElement("div");r.classList.add("modal"),r.innerHTML=`\n      <div class="modal-content">\n        <h2>${t} has won!</h2>\n        <button id="play-again-btn">Play Again?</button>\n      </div>\n    `,document.body.appendChild(r),document.getElementById("play-again-btn").addEventListener("click",(()=>{r.remove();const t=document.querySelectorAll(".square"),i=document.querySelectorAll(".row");t.forEach((t=>{t.textContent="",t.classList.remove("ship"),t.remove()})),i.forEach((t=>{t.remove()})),n.gameboard.clearBoard(),e.gameboard.clearBoard(),o.classList.remove("blur"),b()}))}function b(){const t=document.querySelector(".gameboard.playerBoard"),n=document.querySelector(".gameboard.cpuBoard");let e=new f(10),o=new m("Human",e),r=new f(10),i=new m("CPU",r);var a,s;i.placeRandomShip(5),i.placeRandomShip(4),i.placeRandomShip(3),i.placeRandomShip(3),i.placeRandomShip(2),i.placeRandomShip(2),i.gameboard.renderCPUGameBoard(n,i.gameboard.board),o.gameboard.renderPlayerBoard(t,o.gameboard.board),function(){const t=document.createElement("button");t.textContent="Rotate",document.querySelector("body").appendChild(t),document.querySelectorAll(".square.humanSquare").forEach((t=>{t.addEventListener("mouseover",(()=>{t.style.backgroundColor="green"})),t.addEventListener("mouseout",(()=>{t.style.backgroundColor="#3a3a3a"})),t.addEventListener("click",(t=>{const n=t.target.getAttribute("data-row"),e=t.target.getAttribute("data-col");console.log(n,e)}))}))}(),o.shipCounter(),i.shipCounter(),o.changeTurn(),a=o,s=i,document.querySelectorAll(".cpuSquare").forEach((t=>{t.addEventListener("click",(()=>{const n=t.dataset.row,e=t.dataset.col;if(a.turn&&"X"!==t.textContent){if(t.textContent="X",s.gameboard.board[n][e]instanceof p&&(console.log("ship hit"),t.classList.add("ship")),s.receiveAttack(n,e),s.shipCounter(),s.hasLost())return void g("Player",a,s);if(a.changeTurn(),a.attackRandomSpot(),a.shipCounter(),a.hasLost())return void g("CPU",a,s);a.changeTurn()}}))}))}b()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,