(()=>{"use strict";var n={28:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),i=e.n(o),r=e(645),a=e.n(r)()(i());a.push([n.id,'* {\n\tfont-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;\n\tbox-sizing: border-box;\n}\n\nbody {\n\tbackground-color: #181818;\n\tcolor: white;\n\tmargin: 0;\n}\n\n.Title {\n\ttext-align: center;\n\tmargin: 2.5vh 0;\n}\n\n.TitleText {\n\tfont-size: 5vw;\n\tcolor: white;\n\tmargin: 0;\n}\n\n.gameboards {\n\tposition: relative;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tpadding: 2vh;\n\tgap: 5vw;\n\tjustify-content: center;\n}\n\n.gameboard.playerBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 25vw;\n\theight: 25vw;\n\tborder: 0.25vw solid rgb(2, 2, 112);\n\tborder-bottom: 0.3vw solid rgb(2, 2, 112);\n\tposition: relative;\n}\n\n.gameboard.cpuBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 25vw;\n\theight: 25vw;\n\tborder: 0.25vw solid rgb(112, 2, 2);\n\tborder-bottom: 0.3vw solid rgb(112, 2, 2);\n\tposition: relative;\n}\n\n.gameboard .row {\n\tdisplay: flex;\n\theight: 4vw;\n}\n\n.square {\n\twidth: 10%;\n\tbackground-color: #3a3a3a;\n\tborder: 0.1vw solid #202020;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 1.5vw;\n}\n\n.shipsRemaining {\n\ttext-align: center;\n\tmargin-top: 5vh;\n}\n\n.playerShips,\n.cpuShips {\n\tfont-size: 2vw;\n\tmargin: 2vh 0;\n}\n\n.fa {\n\tcolor: white;\n\ttransition: transform 0.3s ease-in-out;\n}\n\n.fa:hover {\n\ttransform: rotate(360deg) scale(1.2);\n}\n\n.footer {\n\tbottom: 0;\n\tleft: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 1vw;\n\twidth: 100%;\n\theight: 10vh;\n\tfont-size: 1.5vw;\n\tcolor: white;\n}\n\n.legend {\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: white;\n}\n\n.legend-bottom {\n\tleft: 0;\n\tright: 0;\n\tdisplay: flex;\n\tflex-direction: row;\n\tgap: 1.9vw;\n\tmargin-left: 1vw;\n}\n\n.legend-number {\n\twidth: 10%;\n\theight: 100%;\n}\n\n.legend-left {\n\tmargin-left: -1vw;\n\tmargin-top: 1vw;\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1.3vw;\n}\n\n.legend-right {\n\tmargin-left: -1vw;\n\tmargin-top: 1vw;\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1.3vw;\n}\n\nspan {\n\tcolor: #6d6d6d;\n\tfont-size: 1vw;\n}\n\n.ship {\n\tborder: white 0.1vw solid;\n\tfont-weight: bold;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;CACC,sEAAsE;CACtE,sBAAsB;AACvB;;AAEA;CACC,yBAAyB;CACzB,YAAY;CACZ,SAAS;AACV;;AAEA;CACC,kBAAkB;CAClB,eAAe;AAChB;;AAEA;CACC,cAAc;CACd,YAAY;CACZ,SAAS;AACV;;AAEA;CACC,kBAAkB;CAClB,aAAa;CACb,eAAe;CACf,YAAY;CACZ,QAAQ;CACR,uBAAuB;AACxB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,WAAW;CACX,YAAY;CACZ,mCAAmC;CACnC,yCAAyC;CACzC,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,WAAW;CACX,YAAY;CACZ,mCAAmC;CACnC,yCAAyC;CACzC,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,WAAW;AACZ;;AAEA;CACC,UAAU;CACV,yBAAyB;CACzB,2BAA2B;CAC3B,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,gBAAgB;AACjB;;AAEA;CACC,kBAAkB;CAClB,eAAe;AAChB;;AAEA;;CAEC,cAAc;CACd,aAAa;AACd;;AAEA;CACC,YAAY;CACZ,sCAAsC;AACvC;;AAEA;CACC,oCAAoC;AACrC;;AAEA;CACC,SAAS;CACT,OAAO;CACP,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,QAAQ;CACR,WAAW;CACX,YAAY;CACZ,gBAAgB;CAChB,YAAY;AACb;;AAEA;CACC,kBAAkB;CAClB,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,uBAAuB;CACvB,YAAY;AACb;;AAEA;CACC,OAAO;CACP,QAAQ;CACR,aAAa;CACb,mBAAmB;CACnB,UAAU;CACV,gBAAgB;AACjB;;AAEA;CACC,UAAU;CACV,YAAY;AACb;;AAEA;CACC,iBAAiB;CACjB,eAAe;CACf,eAAe;CACf,aAAa;CACb,sBAAsB;CACtB,UAAU;AACX;;AAEA;CACC,iBAAiB;CACjB,eAAe;CACf,eAAe;CACf,aAAa;CACb,sBAAsB;CACtB,UAAU;AACX;;AAEA;CACC,cAAc;CACd,cAAc;AACf;;AAEA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:['* {\n\tfont-family: Cambria, Cochin, Georgia, Times, "Times New Roman", serif;\n\tbox-sizing: border-box;\n}\n\nbody {\n\tbackground-color: #181818;\n\tcolor: white;\n\tmargin: 0;\n}\n\n.Title {\n\ttext-align: center;\n\tmargin: 2.5vh 0;\n}\n\n.TitleText {\n\tfont-size: 5vw;\n\tcolor: white;\n\tmargin: 0;\n}\n\n.gameboards {\n\tposition: relative;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tpadding: 2vh;\n\tgap: 5vw;\n\tjustify-content: center;\n}\n\n.gameboard.playerBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 25vw;\n\theight: 25vw;\n\tborder: 0.25vw solid rgb(2, 2, 112);\n\tborder-bottom: 0.3vw solid rgb(2, 2, 112);\n\tposition: relative;\n}\n\n.gameboard.cpuBoard {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 25vw;\n\theight: 25vw;\n\tborder: 0.25vw solid rgb(112, 2, 2);\n\tborder-bottom: 0.3vw solid rgb(112, 2, 2);\n\tposition: relative;\n}\n\n.gameboard .row {\n\tdisplay: flex;\n\theight: 4vw;\n}\n\n.square {\n\twidth: 10%;\n\tbackground-color: #3a3a3a;\n\tborder: 0.1vw solid #202020;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 1.5vw;\n}\n\n.shipsRemaining {\n\ttext-align: center;\n\tmargin-top: 5vh;\n}\n\n.playerShips,\n.cpuShips {\n\tfont-size: 2vw;\n\tmargin: 2vh 0;\n}\n\n.fa {\n\tcolor: white;\n\ttransition: transform 0.3s ease-in-out;\n}\n\n.fa:hover {\n\ttransform: rotate(360deg) scale(1.2);\n}\n\n.footer {\n\tbottom: 0;\n\tleft: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 1vw;\n\twidth: 100%;\n\theight: 10vh;\n\tfont-size: 1.5vw;\n\tcolor: white;\n}\n\n.legend {\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: white;\n}\n\n.legend-bottom {\n\tleft: 0;\n\tright: 0;\n\tdisplay: flex;\n\tflex-direction: row;\n\tgap: 1.9vw;\n\tmargin-left: 1vw;\n}\n\n.legend-number {\n\twidth: 10%;\n\theight: 100%;\n}\n\n.legend-left {\n\tmargin-left: -1vw;\n\tmargin-top: 1vw;\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1.3vw;\n}\n\n.legend-right {\n\tmargin-left: -1vw;\n\tmargin-top: 1vw;\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 1.3vw;\n}\n\nspan {\n\tcolor: #6d6d6d;\n\tfont-size: 1vw;\n}\n\n.ship {\n\tborder: white 0.1vw solid;\n\tfont-weight: bold;\n}\n'],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);o&&a[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),t.push(c))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var r={},a=[],s=0;s<n.length;s++){var A=n[s],l=o.base?A[0]+o.base:A[0],c=r[l]||0,d="".concat(l," ").concat(c);r[l]=c+1;var h=e(d),C={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==h)t[h].references++,t[h].updater(C);else{var p=i(C,o);o.byIndex=s,t.splice(s,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function i(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var s=e(r[a]);t[s].references--}for(var A=o(n,i),l=0;l<r.length;l++){var c=e(r[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=A}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,i&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return n[o](r,r.exports,e),r.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),o=e(795),i=e.n(o),r=e(569),a=e.n(r),s=e(565),A=e.n(s),l=e(216),c=e.n(l),d=e(589),h=e.n(d),C=e(28),p={};p.styleTagTransform=h(),p.setAttributes=A(),p.insert=a().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=c(),t()(C.Z,p),C.Z&&C.Z.locals&&C.Z.locals;class u{constructor(n,t,e){this.shipLength=n,this.position=t,this.hits=Array(n).fill(!1),this.orientation=e}isSunk(){return!!this.hits.every((n=>n))}hitShip(n){this.hits[n]=!0}isHit(n){return!!this.hits[n]}rotate(){"horizontal"===this.orientation?this.orientation="vertical":this.orientation="horizontal"}}class f{constructor(n){this.boardSize=n,this.board=this.createBoard(n),this.ships=[]}createBoard(n){let t=[];for(let e=0;e<n;e++){let e=[];for(let t=0;t<n;t++)e.push(null);t.push(e)}return t}renderGameboard(n,t){for(let e=0;e<t.length;e++){const o=document.createElement("div");o.classList.add("row");for(let n=0;n<t[e].length;n++){const i=document.createElement("div");i.classList.add("square"),t[e][n]instanceof u&&(i.textContent="S",i.classList.add("ship")),o.appendChild(i)}n.appendChild(o)}n.classList.add("playerBoard")}addShip(n){if(!0===this.isShipOverlap(n)||!1===this.isShipInBounds(n))return!1;this.ships.push(n);const t=n.position.row,e=n.position.col;if("horizontal"===n.orientation)for(let o=0;o<n.shipLength;o++)this.board[t][e+o]=n;else for(let o=0;o<n.shipLength;o++)this.board[t+o][e]=n;return!0}isShipInBounds(n){if("horizontal"===n.orientation){const t=n.position.col,e=t+n.shipLength-1;if(t<0||e>this.boardSize-1)return console.log("ship out of bounds"),!1}else{const t=n.position.row,e=t+n.shipLength-1;if(t<0||e>this.boardSize-1)return console.log("ship out of bounds"),!1}return console.log("ship in bounds"),!0}isShipOverlap(n){for(let t=0;t<this.ships.length;t++){let e=this.ships[t];if("horizontal"===n.position.orientation){if(n.position.row===e.position.row&&n.position.col+t>=e.position.col&&n.position.col+t<=e.position.col+e.shipLength-1)return console.log("overlap true"),!0}else if(n.position.col===e.position.col&&n.position.row+t>=e.position.row&&n.position.row+t<=e.position.row+e.shipLength-1)return!0}return!1}receiveAttack(n,t){if(null===this.board[n][t])return this.board[n][t]=!0,!1;{const e=this.board[n][t];return"horizontal"===e.orientation?e.hitShip(t-e.position.col):e.hitShip(n-e.position.row),this.board[n][t]=!0,!0}}allShipsSunk(){return this.ships.every((n=>n.isSunk()))}numberOfShips(){return this.ships.length}}class g{constructor(n,t,e=!1){this.name=n,this.gameboard=t,this.turn=e}isTurn(){return!!this.turn}changeTurn(){this.turn?this.turn=!1:this.turn=!0}placeShip(n,t,e){const o=new u(n.shipLength,t,e);return this.gameboard.addShip(o)}receiveAttack(n,t){return this.gameboard.receiveAttack(n,t)}attackRandomSpot(){const n=[];for(let t=0;t<this.gameboard.boardSize;t++)for(let e=0;e<this.gameboard.boardSize;e++){const o=this.gameboard.board[t][e];(null===o||o instanceof u&&!o.isHit(t,e))&&n.push({row:t,col:e})}if(0===n.length)return!1;const t=n[Math.floor(Math.random()*n.length)];return this.gameboard.receiveAttack(t.row,t.col),!0}shipCounter(){const n=document.querySelector(".playerShips"),t=document.querySelector(".cpuShips");"Human"===this.name?n.textContent=`Player Ships Remaining: ${this.gameboard.numberOfShips()}`:"CPU"===this.name&&(t.textContent=`CPU Ships Remaining: ${this.gameboard.numberOfShips()}`)}hasLost(){return this.gameboard.allShipsSunk()}}let m=new g("Human",new f(10)),v=new g("CPU",new f(10));!function(){const n=new u(2,[5,6],"vertical");m.placeShip(n,{row:4,col:2},"vertical");const t=new u(2,[5,6],"vertical");m.placeShip(t,{row:0,col:5},"vertical");const e=new u(3,[1,2,3],"horizontal");m.placeShip(e,{row:0,col:0},"horizontal");const o=new u(3,[8,9,10],"horizontal");m.placeShip(o,{row:2,col:7},"horizontal");const i=new u(4,[47,57,67,77],"vertical");m.placeShip(i,{row:4,col:7},"vertical");const r=new u(5,[15,25,35,45,55],"horizontal");m.placeShip(r,{row:8,col:1},"horizontal")}(),function(){const n=new u(2,[28,38],"vertical");v.placeShip(n,{row:3,col:9},"vertical");const t=new u(3,[46,47,48],"horizontal");v.placeShip(t,{row:4,col:1},"horizontal");const e=new u(3,[25,26,27],"horizontal");v.placeShip(e,{row:7,col:4},"horizontal");const o=new u(4,[18,28,38,48],"vertical");v.placeShip(o,{row:0,col:6},"vertical");const i=new u(5,[32,42,52,62,72],"horizontal");v.placeShip(i,{row:2,col:0},"horizontal");const r=new u(2,[28,38],"horizontal");v.placeShip(r,{row:9,col:7},"horizontal")}(),m.shipCounter(),v.shipCounter();const w=document.querySelector(".gameboard.playerBoard"),b=document.querySelector(".gameboard.cpuBoard");m.gameboard.renderGameboard(w,m.gameboard.board),v.gameboard.renderGameboard(b,v.gameboard.board)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,